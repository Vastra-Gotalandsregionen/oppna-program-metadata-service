<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-2.5.xsd" >


    <!--  Property file reader -->
	<bean id="propertyPlaceholder" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:keywordservice-svc.properties</value>
				<value>classpath:searchprofiles.properties</value>
			</list>
		</property>
	</bean>
    <!-- Properties bundles -->
    <!--<context:property-placeholder location="classpath:searchprofiles.properties, classpath:keywordservice-svc.properties" /> -->

    <!-- Import searchprofiles -->
    <import resource="classpath*:searchprofiles-config.xml" />

    <bean id="blacklistedWordsProcessor" class="se.vgregion.metaservice.keywordservice.processing.text.TextProcessorRemoveBlacklistedWords">
        <property name="blacklistedWordDao" ref="blacklistedWordDao" />
    </bean>


	<bean id="keywordExtractorProcessor" class="se.vgregion.metaservice.keywordservice.processing.text.TextProcessorKeywordExtractorImpl">
		<property name="nrKeywordsProperty"	value="nrKeywords" />
		<property name="outputProperty"		value="keywords" />
		<property name="language"			value="SWEDISH" />
		<property name="candidates"			value="NPCHUNK" />
		<property name="algorithm"			value="NBC" />
        <property name="kx"                 ref="keyex" />
	</bean>

    <!-- FORMAT PROCESSORS -->
    <bean id="formatProcessorText" class="se.vgregion.metaservice.keywordservice.processing.format.FormatProcessorText" />
    <bean id="formatProcessorHtml" class="se.vgregion.metaservice.keywordservice.processing.format.FormatProcessorHtml" />
    <bean id="formatProcessorTika" class="se.vgregion.metaservice.keywordservice.processing.format.FormatProcessorTika" />

	<!--  SERVICE DEFINITIONS -->

    <bean id="metaservice.analysisService" class="se.vgregion.metaservice.keywordservice.impl.AnalysisServiceImpl">
        <property name="textProcessors">
            <list>
				<ref bean="keywordExtractorProcessor" />
            </list>
        </property>
        <property name="minWordLength"			value="0" />
		<property name="nrKeywordsProperty"		value="nrKeywords" />
		<property name="finalResultProperty"	value="keywords" />
    </bean>

	<!-- Connection to Apelon -->
<!--     <import resource="classpath*:spring-config.xml" /> -->

    <bean id="metaservice.medicalTaxonomyService"
                class="se.vgregion.metaservice.keywordservice.impl.MedicalTaxonomyServiceApelonImpl"
		init-method="initConnection">
        <property name="host" value="${taxonomyservice.host}" />
        <property name="port" value="${taxonomyservice.port}" />
        <property name="username" value="${taxonomyservice.username}" />
        <property name="password" value="${taxonomyservice.password}" />
        <property name="namespaceName" value="SweMeSH" />
        <property name="resultKeywordsLimit" value="10" />
        <property name="sourceIdPropertyKey" value="MN" />
    </bean>

    <bean id="metaservice.keywordService" class="se.vgregion.metaservice.keywordservice.KeyWordService">
        <property name="analysisService" ref="metaservice.analysisService" />
        <property name="medicalTaxonomyService" ref="metaservice.medicalTaxonomyService" />
        <property name="userProfileService" ref = "metaservice.userProfileService"/>
        <property name="blacklistedWordDao" ref="blacklistedWordDao" />
        <!--  List of searchprofiles defined in searchprofiles-config.xml  -->
        <property name="searchProfiles">
            <list>
                <ref bean="searchProfile.vgr"/>
                <ref bean="searchProfile.vgr_epi" />
                <ref bean="searchProfile.vgr_semsys" />
                <ref bean="searchProfile.vgr_regcal" />
                <ref bean="searchProfile.vgr_barium" />
                <ref bean="searchProfile.vgr_alfresco" />
                <ref bean="searchProfile.vgr_openpipeline" />
            </list>
        </property>
        <property name="solrKeywordService" ref="solrKeywordService"/>
    </bean>

  <bean id="solrKeywordService" class="se.vgregion.metaservice.keywordservice.SolrKeywordService">
    <property name="solrConnection" value="${solrservice.connection}"/>
  </bean>

	<bean id="metaservice.userProfileService" class="se.vgregion.metaservice.keywordservice.impl.UserProfileServiceEmptyImpl" />

    <bean id="myFormatProcessorFactoryManager" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="se.vgregion.metaservice.keywordservice.processing.format.FormatProcessorFactory.setFormatProcessors" />
        <property name="arguments">
            <map>
                <entry key="text" value-ref="formatProcessorText" />
                <entry key="html" value-ref="formatProcessorHtml" />
                <entry key="pdf" value-ref="formatProcessorTika" />
                <entry key="odf" value-ref="formatProcessorTika" />
                <entry key="doc" value-ref="formatProcessorTika" />
                <entry key="docx" value-ref="formatProcessorTika" />
                <entry key="xls" value-ref="formatProcessorTika" />
                <entry key="xlsx" value-ref="formatProcessorTika" />
                <entry key="ppt" value-ref="formatProcessorTika" />
                <entry key="pptx" value-ref="formatProcessorTika" />
            </map>
        </property>
    </bean>

	<!-- DAO:S -->

	<bean id="blacklistedWordDao" class="se.vgregion.metaservice.keywordservice.dao.BlacklistedWordEmptyImpl" />

	<!-- bean post-processor for JPA annotations -->

    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

    <tx:annotation-driven />

	<bean id="metaservice.keywordServiceIntService"
		class="se.vgregion.metaservice.keywordservice.intsvc.KeywordServiceIntServiceImpl">
		<property name="keywordService" ref="metaservice.keywordService" />
	</bean>



    <!-- ### Keyword Extraction ### -->
    
    <bean id="keyex" class="com.findwise.linguistics.keywordextraction.KeyEx">
        <property name="candidateExtractor" ref="candidates"/>
        <property name="keywordClassifier"   ref="classifier"/>
        <property name="lemmatizer" ref="lemmatizer"/>
        <property name="posTagger" ref="posTagger"/>
<!--         <property name="maxExecutionTime" value="600000"/> -->
<!--         <property name="maxNumberOfWordsInBody" value="10000"/> -->
<!--         <property name="maxSentenceLength" value="40"/>  -->
<!--         <property name="minSentenceLength" value="1"/> --> 
    </bean>
    
    <!-- Candidate extraction -->
    <bean id="candidates" class="com.findwise.linguistics.keywordextraction.candidates.CandidateExtractor">
        <property name="filterNumbers" value="true"/>
        <property name="extractors">
            <map>
                <entry key="NGRAMS"   value-ref="ngram"/>
                <entry key="POS"      value-ref="posMatcher"/>
                <entry key="NPCHUNK"  value-ref="npChunker"/>
            </map>
        </property>
    </bean>
    
    <!-- Ngram -->
    <bean id="ngram" class="com.findwise.linguistics.keywordextraction.candidates.ngrams.Ngrams">
        <property name="stopwords" ref="stopwords"/>
    </bean>
    
    <!--PosMatcher -->
    <bean id="posMatcher" class="com.findwise.linguistics.keywordextraction.candidates.pos.PosMatcher" init-method="init">
        <property name="patternFiles">
            <map>
                <entry key="SWEDISH" value="${root.path}/empty/data/pos_patterns/swedish.txt"/>
                <entry key="ENGLISH" value="${root.path}/empty/data/pos_patterns/english.txt"/>
            </map>
        </property>
    </bean>
    
    <!-- Chunkers -->
    <bean id="npChunker" class="com.findwise.linguistics.keywordextraction.candidates.npchunk.NPChunker">
        <property name="chunkers">
            <map>
                <entry key="SWEDISH" value-ref="sweChunker"/>
                <entry key="ENGLISH" value-ref="engChunker"/>
            </map>
        </property>
    </bean>
    
    <bean id="sweChunker" class="com.findwise.linguistics.keywordextraction.candidates.npchunk.SweChunker" init-method="init">
        <property name="mappingsFilePath" value="${root.path}/empty/data/npchunk/english/postags"/>
    </bean>
    
    <bean id="engChunker" class="com.findwise.linguistics.keywordextraction.candidates.npchunk.EngChunker" init-method="init">
        <property name="dictPath" value="${root.path}/empty/data/npchunk/english/chunk_dict"/>
        <property name="rulesPath" value="${root.path}/empty/data/npchunk/english/chunk_rules"/>
    </bean>
    
    <!-- Stopwords -->
    <bean id="stopwords" class="com.findwise.linguistics.keywordextraction.candidates.Stopwords" init-method="init">
        <property name="resources">
            <map>
                <entry key="SWEDISH" value="${root.path}/empty/data/stopwords/swedish.txt"/>
                <entry key="ENGLISH" value="${root.path}/empty/data/stopwords/english.txt"/>
                
            </map>
        </property>
    </bean>
    
    <!-- Classification algorithms -->
    <bean id="classifier" class="com.findwise.linguistics.keywordextraction.classification.KeywordClassifier">
        <property name="postProcessor" ref="postprocessor"/>
        <property name="classifiers">
            <list>
                <ref bean="tf"/>
                <ref bean="tfidfClassifier"/>
                <ref bean="nbc"/>
                <ref bean="kbann"/>
                <ref bean="svm"/>
            </list>
        </property>
    </bean>
    
    <!-- PostProcessor -->
    <bean id="postprocessor" class="com.findwise.linguistics.keywordextraction.processing.PostProcessor">
        <property name="diff"   value="1"/>
        <property name="factor"                           value="1.5"/>
    </bean>
    
    <!-- Term frequency -->
    <bean id="tf" class="com.findwise.linguistics.keywordextraction.classification.tf.TermFrequency"/>

    <!-- TFIDFClassifier -->
    <bean id="tfidfClassifier" class="com.findwise.linguistics.keywordextraction.classification.tfidf.TFIDFClassifier">
        <property name="tfidf" ref="tfidf"/>
    </bean>
    
    <bean id="tfidf" class="com.findwise.linguistics.keywordextraction.tools.TFIDF" init-method="init" >
        <property name="idfPaths">
            <map>
<!--                 <entry key="SWEDISH" value="$${root.path}/empty/data/idf/swedish.idf"/> -->
                <entry key="SWEDISH" value="${root.path}/empty/data/idf/vgr.idf"/>
                <entry key="ENGLISH" value="${root.path}/empty/data/idf/english.idf"/>
            </map>
        </property>
    </bean>

    <!-- NBC -->
    <bean id="nbc" class="com.findwise.linguistics.keywordextraction.classification.nbc.NBC" init-method="init" >
        <property name="cachePath" value="${root.path}/empty/data/models/nbc/"/>
        <property name="candidateExtractor" ref="candidates"/>
        <property name="tfidf" ref="tfidf"/>
    </bean>
    
    <!-- KBANN -->
    <bean id="kbann" class="com.findwise.linguistics.keywordextraction.classification.kbann.KBANN" init-method="init" >
        <property name="cachePath" value="${root.path}/empty/data/models/kbann/"/>
        <property name="candidateExtractor" ref="candidates"/>
        <property name="tfidf" ref="tfidf"/>
        <property name="nbc" ref="nbc"/>
        <property name="pso" >
            <bean class="com.findwise.linguistics.keywordextraction.classification.kbann.PSO" />
        </property>
        <property name="backPropagation" >
            <bean class="com.findwise.linguistics.keywordextraction.classification.kbann.BackPropagation" />
        </property>
    </bean>
    
    <!-- SVM -->
    <bean id="svm" class="com.findwise.linguistics.keywordextraction.classification.svm.SVM" init-method="init" >
        <property name="cachePath" value="${root.path}/empty/data/models/svm/"/>
        <property name="candidateExtractor" ref="candidates"/>
        <property name="tfidf" ref="tfidf"/>
        <property name="pso" >
            <bean class="com.findwise.linguistics.keywordextraction.classification.kbann.PSO" />
        </property>
    </bean>
    
    <!-- Lemmatizer -->
    <bean id="lemmatizer" class="com.findwise.linguistics.keywordextraction.tools.Lemmatizer" init-method="init">
        <property name="engFilePath" value="${root.path}/empty/data/lemmatization/english.txt"/>
        <property name="sweFilePath" value="${root.path}/empty/data/lemmatization/saldo.txt"/>
    </bean>
    
    <!-- PsTagger -->
    <bean id="posTagger" class="com.findwise.linguistics.keywordextraction.tools.PosTagger" init-method="init" >
        <property name="resources">
            <map>
                <entry key="SWEDISH" value="${root.path}/empty/data/pos_taggers/se-pos-maxent0412.bin"/>
                <entry key="ENGLISH" value="${root.path}/empty/data/pos_taggers/en-pos-maxent.bin"/>
            </map>
        </property>
    </bean>

    <!-- Global tools -->
    <bean id="corpusHandler" class="com.findwise.linguistics.keywordextraction.tools.CorpusHandler"
                                                                                       init-method="init" lazy-init="false">
        <property name="autoLoad"                    value="false"/>
        <property name="lemmatizer" ref="lemmatizer"/>
        <property name="posTagger" ref="posTagger"/>
    </bean>
    
</beans>
