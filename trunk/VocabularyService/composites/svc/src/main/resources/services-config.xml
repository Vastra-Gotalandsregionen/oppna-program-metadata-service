<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
            http://www.springframework.org/schema/jee
            http://www.springframework.org/schema/jee/spring-jee-2.5.xsd">

    <!-- Import searchprofiles -->
    <import resource="classpath*:searchprofiles-config.xml" />

    <!--  Property file reader -->
    <bean id="propertyPlaceholder" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:vocabularyservice-svc.properties</value>
                <value>classpath:searchprofiles.properties</value>

                <!-- Located in VocabularyService-composite-svc project -->
                <value>classpath*:lemmatisation.properties</value>
            </list>
        </property>
    </bean>

    <!--  SERVICE DEFINITIONS -->

    <bean id="metaservice.vocabularyService" class="se.vgregion.metaservice.vocabularyservice.VocabularyService">
        <property name="medicalTaxonomyService" ref="metaservice.medicalTaxonomyService" />
        <property name="restClient" ref="restClient" />

        <!-- Defines the namespaces, as a comma separated list, which may be exposed to the routine getNamespaceXml -->
        <property name="namepacesExposedToXmlApi" value="${taxonomyservice.allowedNamespaces}" />

        <!-- List of searchprofiles defined in searchprofiles-config.xml -->
        <property name="searchProfiles">
            <list>
                <ref bean="searchProfile.vgr"/>
                <ref bean="searchProfile.vgr_epi" />
                <ref bean="searchProfile.vgr_openpipeline" />
                <ref bean="searchProfile.vgr_regcal" />
            </list>
        </property>
    </bean>
	

    <!--  Connection to apelon -->
	
    <bean id="metaservice.medicalTaxonomyService"
            class="se.vgregion.metaservice.keywordservice.impl.MedicalTaxonomyServiceApelonImpl"
            init-method="initConnection">
        <property name="host" value="${taxonomyservice.host}" />
        <property name="port" value="${taxonomyservice.port}" />
        <property name="username" value="${taxonomyservice.username}" />
        <property name="password" value="${taxonomyservice.password}" />
        <property name="namespaceName" value="VGR" />
        <property name="resultKeywordsLimit" value="100" />
        <property name="sourceIdPropertyKey" value="ID" />
    </bean>



    <!-- LEMMATISATION REST CLIENT CONFIGURATION -->


    <!-- Define our restclient -->
    <bean id="restClient" class="se.vgregion.metaservice.vocabularyservice.LemmatisationRestClient">
        <property name="restTemplate" ref="restTemplate"/>
        <property name="restUrl" value="${lemmatisation.baseurl}/lemmatisation/{word}"/>
    </bean>

    <!-- Bean acting as an API to the REST service -->
    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
        <property name="messageConverters">
            <list>
                <bean id="messageConverter" class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
                    <property name="marshaller" ref="xmlMarshaller" />
                    <property name="unmarshaller" ref="xmlMarshaller" />
                </bean>
            </list>
        </property>
    </bean>

    <!-- The marshaller to use with the REST service -->
    <bean id="xmlMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller" >
        <property name="contextPath" value="se.vgregion.metaservice.lemmatisation.generated" />
        <!-- Uncomment to use schema validation: 
        <property name="schema" value="${lemmatisation.baseurl}/schema.xsd" /> -->
    </bean>

</beans>
